
MCU_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a20  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000a94  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000011  00800060  00800060  00000a94  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a94  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ac4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00000b00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e5a  00000000  00000000  00000c28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ca  00000000  00000000  00001a82  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008b0  00000000  00000000  0000234c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000208  00000000  00000000  00002bfc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b1  00000000  00000000  00002e04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003f0  00000000  00000000  000033b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  000037a5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
   8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
   c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  10:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  14:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  18:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  1c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  20:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  24:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  28:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  2c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  30:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  34:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  38:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  3c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  40:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  44:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  48:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  4c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  50:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <modf+0x12>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d8 e0       	ldi	r29, 0x08	; 8
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_clear_bss>:
  e2:	20 e0       	ldi	r18, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	01 c0       	rjmp	.+2      	; 0xec <.do_clear_bss_start>

000000ea <.do_clear_bss_loop>:
  ea:	1d 92       	st	X+, r1

000000ec <.do_clear_bss_start>:
  ec:	a1 37       	cpi	r26, 0x71	; 113
  ee:	b2 07       	cpc	r27, r18
  f0:	e1 f7       	brne	.-8      	; 0xea <.do_clear_bss_loop>
  f2:	0e 94 b2 00 	call	0x164	; 0x164 <main>
  f6:	0c 94 0e 05 	jmp	0xa1c	; 0xa1c <_exit>

000000fa <__bad_interrupt>:
  fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fe <app_init>:
uint8_t eeprom_password[17];
uint8_t matched_password = No_Match;

void app_init()
{
	UART_init();
  fe:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <UART_init>
	EEPROM_init();
 102:	0e 94 91 00 	call	0x122	; 0x122 <EEPROM_init>
 106:	08 95       	ret

00000108 <app_start>:

void app_start()
{
	while (1)
	{
		UART_receiveString(received_password);
 108:	80 e6       	ldi	r24, 0x60	; 96
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	0e 94 6d 01 	call	0x2da	; 0x2da <UART_receiveString>
		if(received_password[0] != '\0')
 110:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 114:	88 23       	and	r24, r24
 116:	c1 f3       	breq	.-16     	; 0x108 <app_start>
			EEPROM_write_string(received_password);
 118:	80 e6       	ldi	r24, 0x60	; 96
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	0e 94 94 00 	call	0x128	; 0x128 <EEPROM_write_string>
 120:	f3 cf       	rjmp	.-26     	; 0x108 <app_start>

00000122 <EEPROM_init>:
	TWI_write_addr(0x00);
	TWI_stop();
	TWI_start(0b10100110+Read);
	TWI_read_nack(*data);
	TWI_stop();
}
 122:	0e 94 b9 00 	call	0x172	; 0x172 <TWI_init>
 126:	08 95       	ret

00000128 <EEPROM_write_string>:

void EEPROM_write_string(uint8_t *data)
{
 128:	0f 93       	push	r16
 12a:	1f 93       	push	r17
 12c:	cf 93       	push	r28
 12e:	8c 01       	movw	r16, r24
	TWI_start(0b10100110+Write);
 130:	86 ea       	ldi	r24, 0xA6	; 166
 132:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <TWI_start>
	TWI_write_addr(0x00);
 136:	80 e0       	ldi	r24, 0x00	; 0
 138:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <TWI_write_addr>
	TWI_write_addr(0x00);
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <TWI_write_addr>
	
	for(uint8_t i=0; *(data+i)!='\0'; i++){
 142:	c0 e0       	ldi	r28, 0x00	; 0
 144:	03 c0       	rjmp	.+6      	; 0x14c <EEPROM_write_string+0x24>
		TWI_write_data(*(data+i));
 146:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <TWI_write_data>
{
	TWI_start(0b10100110+Write);
	TWI_write_addr(0x00);
	TWI_write_addr(0x00);
	
	for(uint8_t i=0; *(data+i)!='\0'; i++){
 14a:	cf 5f       	subi	r28, 0xFF	; 255
 14c:	f8 01       	movw	r30, r16
 14e:	ec 0f       	add	r30, r28
 150:	f1 1d       	adc	r31, r1
 152:	80 81       	ld	r24, Z
 154:	81 11       	cpse	r24, r1
 156:	f7 cf       	rjmp	.-18     	; 0x146 <EEPROM_write_string+0x1e>
		TWI_write_data(*(data+i));
	}
	
	TWI_stop();
 158:	0e 94 06 01 	call	0x20c	; 0x20c <TWI_stop>
}
 15c:	cf 91       	pop	r28
 15e:	1f 91       	pop	r17
 160:	0f 91       	pop	r16
 162:	08 95       	ret

00000164 <main>:

#include "APP_2/APP_2.h"

int main(void)
{
	app_init();
 164:	0e 94 7f 00 	call	0xfe	; 0xfe <app_init>
	app_start();
 168:	0e 94 84 00 	call	0x108	; 0x108 <app_start>
}
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	08 95       	ret

00000172 <TWI_init>:
	set_pin(TWCR,TWINT);
	set_pin(TWCR,TWEN);
	
	while (!( TWCR & (1 << TWINT) )); // Wait for TWINT Flag set
	
	*data = TWDR;
 172:	11 b8       	out	0x01, r1	; 1
 174:	61 b1       	in	r22, 0x01	; 1
 176:	63 70       	andi	r22, 0x03	; 3
 178:	70 e0       	ldi	r23, 0x00	; 0
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	0e 94 90 02 	call	0x520	; 0x520 <__floatsisf>
 182:	9b 01       	movw	r18, r22
 184:	ac 01       	movw	r20, r24
 186:	60 e0       	ldi	r22, 0x00	; 0
 188:	70 e0       	ldi	r23, 0x00	; 0
 18a:	80 e8       	ldi	r24, 0x80	; 128
 18c:	90 e4       	ldi	r25, 0x40	; 64
 18e:	0e 94 1c 03 	call	0x638	; 0x638 <pow>
 192:	9b 01       	movw	r18, r22
 194:	ac 01       	movw	r20, r24
 196:	0e 94 81 01 	call	0x302	; 0x302 <__addsf3>
 19a:	9b 01       	movw	r18, r22
 19c:	ac 01       	movw	r20, r24
 19e:	60 e0       	ldi	r22, 0x00	; 0
 1a0:	70 e0       	ldi	r23, 0x00	; 0
 1a2:	80 e8       	ldi	r24, 0x80	; 128
 1a4:	9f e4       	ldi	r25, 0x4F	; 79
 1a6:	0e 94 ed 01 	call	0x3da	; 0x3da <__divsf3>
 1aa:	0e 94 5f 02 	call	0x4be	; 0x4be <__fixunssfsi>
 1ae:	60 b9       	out	0x00, r22	; 0
 1b0:	08 95       	ret

000001b2 <TWI_start>:
 1b2:	96 b7       	in	r25, 0x36	; 54
 1b4:	90 68       	ori	r25, 0x80	; 128
 1b6:	96 bf       	out	0x36, r25	; 54
 1b8:	96 b7       	in	r25, 0x36	; 54
 1ba:	90 62       	ori	r25, 0x20	; 32
 1bc:	96 bf       	out	0x36, r25	; 54
 1be:	96 b7       	in	r25, 0x36	; 54
 1c0:	94 60       	ori	r25, 0x04	; 4
 1c2:	96 bf       	out	0x36, r25	; 54
 1c4:	06 b6       	in	r0, 0x36	; 54
 1c6:	07 fe       	sbrs	r0, 7
 1c8:	fd cf       	rjmp	.-6      	; 0x1c4 <TWI_start+0x12>
 1ca:	83 b9       	out	0x03, r24	; 3
 1cc:	86 b7       	in	r24, 0x36	; 54
 1ce:	80 68       	ori	r24, 0x80	; 128
 1d0:	86 bf       	out	0x36, r24	; 54
 1d2:	86 b7       	in	r24, 0x36	; 54
 1d4:	84 60       	ori	r24, 0x04	; 4
 1d6:	86 bf       	out	0x36, r24	; 54
 1d8:	06 b6       	in	r0, 0x36	; 54
 1da:	07 fe       	sbrs	r0, 7
 1dc:	fd cf       	rjmp	.-6      	; 0x1d8 <TWI_start+0x26>
 1de:	08 95       	ret

000001e0 <TWI_write_addr>:
 1e0:	83 b9       	out	0x03, r24	; 3
 1e2:	86 b7       	in	r24, 0x36	; 54
 1e4:	80 68       	ori	r24, 0x80	; 128
 1e6:	86 bf       	out	0x36, r24	; 54
 1e8:	86 b7       	in	r24, 0x36	; 54
 1ea:	84 60       	ori	r24, 0x04	; 4
 1ec:	86 bf       	out	0x36, r24	; 54
 1ee:	06 b6       	in	r0, 0x36	; 54
 1f0:	07 fe       	sbrs	r0, 7
 1f2:	fd cf       	rjmp	.-6      	; 0x1ee <TWI_write_addr+0xe>
 1f4:	08 95       	ret

000001f6 <TWI_write_data>:
 1f6:	83 b9       	out	0x03, r24	; 3
 1f8:	86 b7       	in	r24, 0x36	; 54
 1fa:	80 68       	ori	r24, 0x80	; 128
 1fc:	86 bf       	out	0x36, r24	; 54
 1fe:	86 b7       	in	r24, 0x36	; 54
 200:	84 60       	ori	r24, 0x04	; 4
 202:	86 bf       	out	0x36, r24	; 54
 204:	06 b6       	in	r0, 0x36	; 54
 206:	07 fe       	sbrs	r0, 7
 208:	fd cf       	rjmp	.-6      	; 0x204 <TWI_write_data+0xe>
 20a:	08 95       	ret

0000020c <TWI_stop>:
}


void TWI_stop()
{
	TWCR = (1 << TWSTO) | (1 << TWINT) | (1 << TWEN);// Enable TWI, generate stop
 20c:	84 e9       	ldi	r24, 0x94	; 148
 20e:	86 bf       	out	0x36, r24	; 54
	while( TWCR & (1 << TWSTO) );	// Wait until stop condition execution 
 210:	06 b6       	in	r0, 0x36	; 54
 212:	04 fc       	sbrc	r0, 4
 214:	fd cf       	rjmp	.-6      	; 0x210 <TWI_stop+0x4>
}
 216:	08 95       	ret

00000218 <UART_set_BAUD>:
{
	// Wait for empty transmit buffer
	while ( !( UCSRA & (1 << UDRE)) );
	
	// Put data into buffer, sends the data
	UDR = data;
 218:	90 bd       	out	0x20, r25	; 32
 21a:	89 b9       	out	0x09, r24	; 9
 21c:	08 95       	ret

0000021e <UART_set_frame>:
 21e:	87 30       	cpi	r24, 0x07	; 7
 220:	f9 f0       	breq	.+62     	; 0x260 <UART_set_frame+0x42>
 222:	28 f4       	brcc	.+10     	; 0x22e <UART_set_frame+0x10>
 224:	85 30       	cpi	r24, 0x05	; 5
 226:	41 f0       	breq	.+16     	; 0x238 <UART_set_frame+0x1a>
 228:	86 30       	cpi	r24, 0x06	; 6
 22a:	81 f0       	breq	.+32     	; 0x24c <UART_set_frame+0x2e>
 22c:	36 c0       	rjmp	.+108    	; 0x29a <UART_set_frame+0x7c>
 22e:	88 30       	cpi	r24, 0x08	; 8
 230:	09 f1       	breq	.+66     	; 0x274 <UART_set_frame+0x56>
 232:	89 30       	cpi	r24, 0x09	; 9
 234:	49 f1       	breq	.+82     	; 0x288 <UART_set_frame+0x6a>
 236:	31 c0       	rjmp	.+98     	; 0x29a <UART_set_frame+0x7c>
 238:	80 b5       	in	r24, 0x20	; 32
 23a:	8d 7f       	andi	r24, 0xFD	; 253
 23c:	80 bd       	out	0x20, r24	; 32
 23e:	80 b5       	in	r24, 0x20	; 32
 240:	8b 7f       	andi	r24, 0xFB	; 251
 242:	80 bd       	out	0x20, r24	; 32
 244:	8a b1       	in	r24, 0x0a	; 10
 246:	8b 7f       	andi	r24, 0xFB	; 251
 248:	8a b9       	out	0x0a, r24	; 10
 24a:	27 c0       	rjmp	.+78     	; 0x29a <UART_set_frame+0x7c>
 24c:	80 b5       	in	r24, 0x20	; 32
 24e:	82 60       	ori	r24, 0x02	; 2
 250:	80 bd       	out	0x20, r24	; 32
 252:	80 b5       	in	r24, 0x20	; 32
 254:	8b 7f       	andi	r24, 0xFB	; 251
 256:	80 bd       	out	0x20, r24	; 32
 258:	8a b1       	in	r24, 0x0a	; 10
 25a:	8b 7f       	andi	r24, 0xFB	; 251
 25c:	8a b9       	out	0x0a, r24	; 10
 25e:	1d c0       	rjmp	.+58     	; 0x29a <UART_set_frame+0x7c>
 260:	80 b5       	in	r24, 0x20	; 32
 262:	8d 7f       	andi	r24, 0xFD	; 253
 264:	80 bd       	out	0x20, r24	; 32
 266:	80 b5       	in	r24, 0x20	; 32
 268:	84 60       	ori	r24, 0x04	; 4
 26a:	80 bd       	out	0x20, r24	; 32
 26c:	8a b1       	in	r24, 0x0a	; 10
 26e:	8b 7f       	andi	r24, 0xFB	; 251
 270:	8a b9       	out	0x0a, r24	; 10
 272:	13 c0       	rjmp	.+38     	; 0x29a <UART_set_frame+0x7c>
 274:	80 b5       	in	r24, 0x20	; 32
 276:	82 60       	ori	r24, 0x02	; 2
 278:	80 bd       	out	0x20, r24	; 32
 27a:	80 b5       	in	r24, 0x20	; 32
 27c:	84 60       	ori	r24, 0x04	; 4
 27e:	80 bd       	out	0x20, r24	; 32
 280:	8a b1       	in	r24, 0x0a	; 10
 282:	8b 7f       	andi	r24, 0xFB	; 251
 284:	8a b9       	out	0x0a, r24	; 10
 286:	09 c0       	rjmp	.+18     	; 0x29a <UART_set_frame+0x7c>
 288:	80 b5       	in	r24, 0x20	; 32
 28a:	82 60       	ori	r24, 0x02	; 2
 28c:	80 bd       	out	0x20, r24	; 32
 28e:	80 b5       	in	r24, 0x20	; 32
 290:	84 60       	ori	r24, 0x04	; 4
 292:	80 bd       	out	0x20, r24	; 32
 294:	8a b1       	in	r24, 0x0a	; 10
 296:	84 60       	ori	r24, 0x04	; 4
 298:	8a b9       	out	0x0a, r24	; 10
 29a:	61 30       	cpi	r22, 0x01	; 1
 29c:	19 f0       	breq	.+6      	; 0x2a4 <UART_set_frame+0x86>
 29e:	62 30       	cpi	r22, 0x02	; 2
 2a0:	29 f0       	breq	.+10     	; 0x2ac <UART_set_frame+0x8e>
 2a2:	08 95       	ret
 2a4:	80 b5       	in	r24, 0x20	; 32
 2a6:	87 7f       	andi	r24, 0xF7	; 247
 2a8:	80 bd       	out	0x20, r24	; 32
 2aa:	08 95       	ret
 2ac:	80 b5       	in	r24, 0x20	; 32
 2ae:	88 60       	ori	r24, 0x08	; 8
 2b0:	80 bd       	out	0x20, r24	; 32
 2b2:	08 95       	ret

000002b4 <UART_init>:
 2b4:	83 e3       	ldi	r24, 0x33	; 51
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	0e 94 0c 01 	call	0x218	; 0x218 <UART_set_BAUD>
 2bc:	8a b1       	in	r24, 0x0a	; 10
 2be:	80 61       	ori	r24, 0x10	; 16
 2c0:	8a b9       	out	0x0a, r24	; 10
 2c2:	8a b1       	in	r24, 0x0a	; 10
 2c4:	88 60       	ori	r24, 0x08	; 8
 2c6:	8a b9       	out	0x0a, r24	; 10
 2c8:	61 e0       	ldi	r22, 0x01	; 1
 2ca:	88 e0       	ldi	r24, 0x08	; 8
 2cc:	0e 94 0f 01 	call	0x21e	; 0x21e <UART_set_frame>
 2d0:	08 95       	ret

000002d2 <UART_receive>:
}

uint8_t UART_receive()
{
	/* Wait for data to be received */
	while ( !( UCSRA & (1 << RXC)) );
 2d2:	5f 9b       	sbis	0x0b, 7	; 11
 2d4:	fe cf       	rjmp	.-4      	; 0x2d2 <UART_receive>
	
	/* Get and return received data from buffer */
	return UDR;
 2d6:	8c b1       	in	r24, 0x0c	; 12
}
 2d8:	08 95       	ret

000002da <UART_receiveString>:

void UART_receiveString(uint8_t *string)
{
 2da:	0f 93       	push	r16
 2dc:	1f 93       	push	r17
 2de:	cf 93       	push	r28
 2e0:	8c 01       	movw	r16, r24
	for(uint8_t cnt=0; ; cnt++)
 2e2:	c0 e0       	ldi	r28, 0x00	; 0
	{
		*(string + cnt) = UART_receive();
 2e4:	0e 94 69 01 	call	0x2d2	; 0x2d2 <UART_receive>
 2e8:	f8 01       	movw	r30, r16
 2ea:	ec 0f       	add	r30, r28
 2ec:	f1 1d       	adc	r31, r1
 2ee:	80 83       	st	Z, r24
		if(*(string + cnt) == '\0')
 2f0:	88 23       	and	r24, r24
 2f2:	11 f0       	breq	.+4      	; 0x2f8 <UART_receiveString+0x1e>
	return UDR;
}

void UART_receiveString(uint8_t *string)
{
	for(uint8_t cnt=0; ; cnt++)
 2f4:	cf 5f       	subi	r28, 0xFF	; 255
	{
		*(string + cnt) = UART_receive();
		if(*(string + cnt) == '\0')
			break;
	}
 2f6:	f6 cf       	rjmp	.-20     	; 0x2e4 <UART_receiveString+0xa>
 2f8:	cf 91       	pop	r28
 2fa:	1f 91       	pop	r17
 2fc:	0f 91       	pop	r16
 2fe:	08 95       	ret

00000300 <__subsf3>:
 300:	50 58       	subi	r21, 0x80	; 128

00000302 <__addsf3>:
 302:	bb 27       	eor	r27, r27
 304:	aa 27       	eor	r26, r26
 306:	0e 94 98 01 	call	0x330	; 0x330 <__addsf3x>
 30a:	0c 94 e2 02 	jmp	0x5c4	; 0x5c4 <__fp_round>
 30e:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fp_pscA>
 312:	38 f0       	brcs	.+14     	; 0x322 <__addsf3+0x20>
 314:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__fp_pscB>
 318:	20 f0       	brcs	.+8      	; 0x322 <__addsf3+0x20>
 31a:	39 f4       	brne	.+14     	; 0x32a <__addsf3+0x28>
 31c:	9f 3f       	cpi	r25, 0xFF	; 255
 31e:	19 f4       	brne	.+6      	; 0x326 <__addsf3+0x24>
 320:	26 f4       	brtc	.+8      	; 0x32a <__addsf3+0x28>
 322:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__fp_nan>
 326:	0e f4       	brtc	.+2      	; 0x32a <__addsf3+0x28>
 328:	e0 95       	com	r30
 32a:	e7 fb       	bst	r30, 7
 32c:	0c 94 cb 02 	jmp	0x596	; 0x596 <__fp_inf>

00000330 <__addsf3x>:
 330:	e9 2f       	mov	r30, r25
 332:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <__fp_split3>
 336:	58 f3       	brcs	.-42     	; 0x30e <__addsf3+0xc>
 338:	ba 17       	cp	r27, r26
 33a:	62 07       	cpc	r22, r18
 33c:	73 07       	cpc	r23, r19
 33e:	84 07       	cpc	r24, r20
 340:	95 07       	cpc	r25, r21
 342:	20 f0       	brcs	.+8      	; 0x34c <__addsf3x+0x1c>
 344:	79 f4       	brne	.+30     	; 0x364 <__addsf3x+0x34>
 346:	a6 f5       	brtc	.+104    	; 0x3b0 <__addsf3x+0x80>
 348:	0c 94 15 03 	jmp	0x62a	; 0x62a <__fp_zero>
 34c:	0e f4       	brtc	.+2      	; 0x350 <__addsf3x+0x20>
 34e:	e0 95       	com	r30
 350:	0b 2e       	mov	r0, r27
 352:	ba 2f       	mov	r27, r26
 354:	a0 2d       	mov	r26, r0
 356:	0b 01       	movw	r0, r22
 358:	b9 01       	movw	r22, r18
 35a:	90 01       	movw	r18, r0
 35c:	0c 01       	movw	r0, r24
 35e:	ca 01       	movw	r24, r20
 360:	a0 01       	movw	r20, r0
 362:	11 24       	eor	r1, r1
 364:	ff 27       	eor	r31, r31
 366:	59 1b       	sub	r21, r25
 368:	99 f0       	breq	.+38     	; 0x390 <__addsf3x+0x60>
 36a:	59 3f       	cpi	r21, 0xF9	; 249
 36c:	50 f4       	brcc	.+20     	; 0x382 <__addsf3x+0x52>
 36e:	50 3e       	cpi	r21, 0xE0	; 224
 370:	68 f1       	brcs	.+90     	; 0x3cc <__addsf3x+0x9c>
 372:	1a 16       	cp	r1, r26
 374:	f0 40       	sbci	r31, 0x00	; 0
 376:	a2 2f       	mov	r26, r18
 378:	23 2f       	mov	r18, r19
 37a:	34 2f       	mov	r19, r20
 37c:	44 27       	eor	r20, r20
 37e:	58 5f       	subi	r21, 0xF8	; 248
 380:	f3 cf       	rjmp	.-26     	; 0x368 <__addsf3x+0x38>
 382:	46 95       	lsr	r20
 384:	37 95       	ror	r19
 386:	27 95       	ror	r18
 388:	a7 95       	ror	r26
 38a:	f0 40       	sbci	r31, 0x00	; 0
 38c:	53 95       	inc	r21
 38e:	c9 f7       	brne	.-14     	; 0x382 <__addsf3x+0x52>
 390:	7e f4       	brtc	.+30     	; 0x3b0 <__addsf3x+0x80>
 392:	1f 16       	cp	r1, r31
 394:	ba 0b       	sbc	r27, r26
 396:	62 0b       	sbc	r22, r18
 398:	73 0b       	sbc	r23, r19
 39a:	84 0b       	sbc	r24, r20
 39c:	ba f0       	brmi	.+46     	; 0x3cc <__addsf3x+0x9c>
 39e:	91 50       	subi	r25, 0x01	; 1
 3a0:	a1 f0       	breq	.+40     	; 0x3ca <__addsf3x+0x9a>
 3a2:	ff 0f       	add	r31, r31
 3a4:	bb 1f       	adc	r27, r27
 3a6:	66 1f       	adc	r22, r22
 3a8:	77 1f       	adc	r23, r23
 3aa:	88 1f       	adc	r24, r24
 3ac:	c2 f7       	brpl	.-16     	; 0x39e <__addsf3x+0x6e>
 3ae:	0e c0       	rjmp	.+28     	; 0x3cc <__addsf3x+0x9c>
 3b0:	ba 0f       	add	r27, r26
 3b2:	62 1f       	adc	r22, r18
 3b4:	73 1f       	adc	r23, r19
 3b6:	84 1f       	adc	r24, r20
 3b8:	48 f4       	brcc	.+18     	; 0x3cc <__addsf3x+0x9c>
 3ba:	87 95       	ror	r24
 3bc:	77 95       	ror	r23
 3be:	67 95       	ror	r22
 3c0:	b7 95       	ror	r27
 3c2:	f7 95       	ror	r31
 3c4:	9e 3f       	cpi	r25, 0xFE	; 254
 3c6:	08 f0       	brcs	.+2      	; 0x3ca <__addsf3x+0x9a>
 3c8:	b0 cf       	rjmp	.-160    	; 0x32a <__addsf3+0x28>
 3ca:	93 95       	inc	r25
 3cc:	88 0f       	add	r24, r24
 3ce:	08 f0       	brcs	.+2      	; 0x3d2 <__addsf3x+0xa2>
 3d0:	99 27       	eor	r25, r25
 3d2:	ee 0f       	add	r30, r30
 3d4:	97 95       	ror	r25
 3d6:	87 95       	ror	r24
 3d8:	08 95       	ret

000003da <__divsf3>:
 3da:	0e 94 01 02 	call	0x402	; 0x402 <__divsf3x>
 3de:	0c 94 e2 02 	jmp	0x5c4	; 0x5c4 <__fp_round>
 3e2:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__fp_pscB>
 3e6:	58 f0       	brcs	.+22     	; 0x3fe <__divsf3+0x24>
 3e8:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fp_pscA>
 3ec:	40 f0       	brcs	.+16     	; 0x3fe <__divsf3+0x24>
 3ee:	29 f4       	brne	.+10     	; 0x3fa <__divsf3+0x20>
 3f0:	5f 3f       	cpi	r21, 0xFF	; 255
 3f2:	29 f0       	breq	.+10     	; 0x3fe <__divsf3+0x24>
 3f4:	0c 94 cb 02 	jmp	0x596	; 0x596 <__fp_inf>
 3f8:	51 11       	cpse	r21, r1
 3fa:	0c 94 16 03 	jmp	0x62c	; 0x62c <__fp_szero>
 3fe:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__fp_nan>

00000402 <__divsf3x>:
 402:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <__fp_split3>
 406:	68 f3       	brcs	.-38     	; 0x3e2 <__divsf3+0x8>

00000408 <__divsf3_pse>:
 408:	99 23       	and	r25, r25
 40a:	b1 f3       	breq	.-20     	; 0x3f8 <__divsf3+0x1e>
 40c:	55 23       	and	r21, r21
 40e:	91 f3       	breq	.-28     	; 0x3f4 <__divsf3+0x1a>
 410:	95 1b       	sub	r25, r21
 412:	55 0b       	sbc	r21, r21
 414:	bb 27       	eor	r27, r27
 416:	aa 27       	eor	r26, r26
 418:	62 17       	cp	r22, r18
 41a:	73 07       	cpc	r23, r19
 41c:	84 07       	cpc	r24, r20
 41e:	38 f0       	brcs	.+14     	; 0x42e <__divsf3_pse+0x26>
 420:	9f 5f       	subi	r25, 0xFF	; 255
 422:	5f 4f       	sbci	r21, 0xFF	; 255
 424:	22 0f       	add	r18, r18
 426:	33 1f       	adc	r19, r19
 428:	44 1f       	adc	r20, r20
 42a:	aa 1f       	adc	r26, r26
 42c:	a9 f3       	breq	.-22     	; 0x418 <__divsf3_pse+0x10>
 42e:	35 d0       	rcall	.+106    	; 0x49a <__divsf3_pse+0x92>
 430:	0e 2e       	mov	r0, r30
 432:	3a f0       	brmi	.+14     	; 0x442 <__divsf3_pse+0x3a>
 434:	e0 e8       	ldi	r30, 0x80	; 128
 436:	32 d0       	rcall	.+100    	; 0x49c <__divsf3_pse+0x94>
 438:	91 50       	subi	r25, 0x01	; 1
 43a:	50 40       	sbci	r21, 0x00	; 0
 43c:	e6 95       	lsr	r30
 43e:	00 1c       	adc	r0, r0
 440:	ca f7       	brpl	.-14     	; 0x434 <__divsf3_pse+0x2c>
 442:	2b d0       	rcall	.+86     	; 0x49a <__divsf3_pse+0x92>
 444:	fe 2f       	mov	r31, r30
 446:	29 d0       	rcall	.+82     	; 0x49a <__divsf3_pse+0x92>
 448:	66 0f       	add	r22, r22
 44a:	77 1f       	adc	r23, r23
 44c:	88 1f       	adc	r24, r24
 44e:	bb 1f       	adc	r27, r27
 450:	26 17       	cp	r18, r22
 452:	37 07       	cpc	r19, r23
 454:	48 07       	cpc	r20, r24
 456:	ab 07       	cpc	r26, r27
 458:	b0 e8       	ldi	r27, 0x80	; 128
 45a:	09 f0       	breq	.+2      	; 0x45e <__divsf3_pse+0x56>
 45c:	bb 0b       	sbc	r27, r27
 45e:	80 2d       	mov	r24, r0
 460:	bf 01       	movw	r22, r30
 462:	ff 27       	eor	r31, r31
 464:	93 58       	subi	r25, 0x83	; 131
 466:	5f 4f       	sbci	r21, 0xFF	; 255
 468:	3a f0       	brmi	.+14     	; 0x478 <__divsf3_pse+0x70>
 46a:	9e 3f       	cpi	r25, 0xFE	; 254
 46c:	51 05       	cpc	r21, r1
 46e:	78 f0       	brcs	.+30     	; 0x48e <__divsf3_pse+0x86>
 470:	0c 94 cb 02 	jmp	0x596	; 0x596 <__fp_inf>
 474:	0c 94 16 03 	jmp	0x62c	; 0x62c <__fp_szero>
 478:	5f 3f       	cpi	r21, 0xFF	; 255
 47a:	e4 f3       	brlt	.-8      	; 0x474 <__divsf3_pse+0x6c>
 47c:	98 3e       	cpi	r25, 0xE8	; 232
 47e:	d4 f3       	brlt	.-12     	; 0x474 <__divsf3_pse+0x6c>
 480:	86 95       	lsr	r24
 482:	77 95       	ror	r23
 484:	67 95       	ror	r22
 486:	b7 95       	ror	r27
 488:	f7 95       	ror	r31
 48a:	9f 5f       	subi	r25, 0xFF	; 255
 48c:	c9 f7       	brne	.-14     	; 0x480 <__divsf3_pse+0x78>
 48e:	88 0f       	add	r24, r24
 490:	91 1d       	adc	r25, r1
 492:	96 95       	lsr	r25
 494:	87 95       	ror	r24
 496:	97 f9       	bld	r25, 7
 498:	08 95       	ret
 49a:	e1 e0       	ldi	r30, 0x01	; 1
 49c:	66 0f       	add	r22, r22
 49e:	77 1f       	adc	r23, r23
 4a0:	88 1f       	adc	r24, r24
 4a2:	bb 1f       	adc	r27, r27
 4a4:	62 17       	cp	r22, r18
 4a6:	73 07       	cpc	r23, r19
 4a8:	84 07       	cpc	r24, r20
 4aa:	ba 07       	cpc	r27, r26
 4ac:	20 f0       	brcs	.+8      	; 0x4b6 <__divsf3_pse+0xae>
 4ae:	62 1b       	sub	r22, r18
 4b0:	73 0b       	sbc	r23, r19
 4b2:	84 0b       	sbc	r24, r20
 4b4:	ba 0b       	sbc	r27, r26
 4b6:	ee 1f       	adc	r30, r30
 4b8:	88 f7       	brcc	.-30     	; 0x49c <__divsf3_pse+0x94>
 4ba:	e0 95       	com	r30
 4bc:	08 95       	ret

000004be <__fixunssfsi>:
 4be:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__fp_splitA>
 4c2:	88 f0       	brcs	.+34     	; 0x4e6 <__fixunssfsi+0x28>
 4c4:	9f 57       	subi	r25, 0x7F	; 127
 4c6:	98 f0       	brcs	.+38     	; 0x4ee <__fixunssfsi+0x30>
 4c8:	b9 2f       	mov	r27, r25
 4ca:	99 27       	eor	r25, r25
 4cc:	b7 51       	subi	r27, 0x17	; 23
 4ce:	b0 f0       	brcs	.+44     	; 0x4fc <__fixunssfsi+0x3e>
 4d0:	e1 f0       	breq	.+56     	; 0x50a <__fixunssfsi+0x4c>
 4d2:	66 0f       	add	r22, r22
 4d4:	77 1f       	adc	r23, r23
 4d6:	88 1f       	adc	r24, r24
 4d8:	99 1f       	adc	r25, r25
 4da:	1a f0       	brmi	.+6      	; 0x4e2 <__fixunssfsi+0x24>
 4dc:	ba 95       	dec	r27
 4de:	c9 f7       	brne	.-14     	; 0x4d2 <__fixunssfsi+0x14>
 4e0:	14 c0       	rjmp	.+40     	; 0x50a <__fixunssfsi+0x4c>
 4e2:	b1 30       	cpi	r27, 0x01	; 1
 4e4:	91 f0       	breq	.+36     	; 0x50a <__fixunssfsi+0x4c>
 4e6:	0e 94 15 03 	call	0x62a	; 0x62a <__fp_zero>
 4ea:	b1 e0       	ldi	r27, 0x01	; 1
 4ec:	08 95       	ret
 4ee:	0c 94 15 03 	jmp	0x62a	; 0x62a <__fp_zero>
 4f2:	67 2f       	mov	r22, r23
 4f4:	78 2f       	mov	r23, r24
 4f6:	88 27       	eor	r24, r24
 4f8:	b8 5f       	subi	r27, 0xF8	; 248
 4fa:	39 f0       	breq	.+14     	; 0x50a <__fixunssfsi+0x4c>
 4fc:	b9 3f       	cpi	r27, 0xF9	; 249
 4fe:	cc f3       	brlt	.-14     	; 0x4f2 <__fixunssfsi+0x34>
 500:	86 95       	lsr	r24
 502:	77 95       	ror	r23
 504:	67 95       	ror	r22
 506:	b3 95       	inc	r27
 508:	d9 f7       	brne	.-10     	; 0x500 <__fixunssfsi+0x42>
 50a:	3e f4       	brtc	.+14     	; 0x51a <__fixunssfsi+0x5c>
 50c:	90 95       	com	r25
 50e:	80 95       	com	r24
 510:	70 95       	com	r23
 512:	61 95       	neg	r22
 514:	7f 4f       	sbci	r23, 0xFF	; 255
 516:	8f 4f       	sbci	r24, 0xFF	; 255
 518:	9f 4f       	sbci	r25, 0xFF	; 255
 51a:	08 95       	ret

0000051c <__floatunsisf>:
 51c:	e8 94       	clt
 51e:	09 c0       	rjmp	.+18     	; 0x532 <__floatsisf+0x12>

00000520 <__floatsisf>:
 520:	97 fb       	bst	r25, 7
 522:	3e f4       	brtc	.+14     	; 0x532 <__floatsisf+0x12>
 524:	90 95       	com	r25
 526:	80 95       	com	r24
 528:	70 95       	com	r23
 52a:	61 95       	neg	r22
 52c:	7f 4f       	sbci	r23, 0xFF	; 255
 52e:	8f 4f       	sbci	r24, 0xFF	; 255
 530:	9f 4f       	sbci	r25, 0xFF	; 255
 532:	99 23       	and	r25, r25
 534:	a9 f0       	breq	.+42     	; 0x560 <__floatsisf+0x40>
 536:	f9 2f       	mov	r31, r25
 538:	96 e9       	ldi	r25, 0x96	; 150
 53a:	bb 27       	eor	r27, r27
 53c:	93 95       	inc	r25
 53e:	f6 95       	lsr	r31
 540:	87 95       	ror	r24
 542:	77 95       	ror	r23
 544:	67 95       	ror	r22
 546:	b7 95       	ror	r27
 548:	f1 11       	cpse	r31, r1
 54a:	f8 cf       	rjmp	.-16     	; 0x53c <__floatsisf+0x1c>
 54c:	fa f4       	brpl	.+62     	; 0x58c <__floatsisf+0x6c>
 54e:	bb 0f       	add	r27, r27
 550:	11 f4       	brne	.+4      	; 0x556 <__floatsisf+0x36>
 552:	60 ff       	sbrs	r22, 0
 554:	1b c0       	rjmp	.+54     	; 0x58c <__floatsisf+0x6c>
 556:	6f 5f       	subi	r22, 0xFF	; 255
 558:	7f 4f       	sbci	r23, 0xFF	; 255
 55a:	8f 4f       	sbci	r24, 0xFF	; 255
 55c:	9f 4f       	sbci	r25, 0xFF	; 255
 55e:	16 c0       	rjmp	.+44     	; 0x58c <__floatsisf+0x6c>
 560:	88 23       	and	r24, r24
 562:	11 f0       	breq	.+4      	; 0x568 <__floatsisf+0x48>
 564:	96 e9       	ldi	r25, 0x96	; 150
 566:	11 c0       	rjmp	.+34     	; 0x58a <__floatsisf+0x6a>
 568:	77 23       	and	r23, r23
 56a:	21 f0       	breq	.+8      	; 0x574 <__floatsisf+0x54>
 56c:	9e e8       	ldi	r25, 0x8E	; 142
 56e:	87 2f       	mov	r24, r23
 570:	76 2f       	mov	r23, r22
 572:	05 c0       	rjmp	.+10     	; 0x57e <__floatsisf+0x5e>
 574:	66 23       	and	r22, r22
 576:	71 f0       	breq	.+28     	; 0x594 <__floatsisf+0x74>
 578:	96 e8       	ldi	r25, 0x86	; 134
 57a:	86 2f       	mov	r24, r22
 57c:	70 e0       	ldi	r23, 0x00	; 0
 57e:	60 e0       	ldi	r22, 0x00	; 0
 580:	2a f0       	brmi	.+10     	; 0x58c <__floatsisf+0x6c>
 582:	9a 95       	dec	r25
 584:	66 0f       	add	r22, r22
 586:	77 1f       	adc	r23, r23
 588:	88 1f       	adc	r24, r24
 58a:	da f7       	brpl	.-10     	; 0x582 <__floatsisf+0x62>
 58c:	88 0f       	add	r24, r24
 58e:	96 95       	lsr	r25
 590:	87 95       	ror	r24
 592:	97 f9       	bld	r25, 7
 594:	08 95       	ret

00000596 <__fp_inf>:
 596:	97 f9       	bld	r25, 7
 598:	9f 67       	ori	r25, 0x7F	; 127
 59a:	80 e8       	ldi	r24, 0x80	; 128
 59c:	70 e0       	ldi	r23, 0x00	; 0
 59e:	60 e0       	ldi	r22, 0x00	; 0
 5a0:	08 95       	ret

000005a2 <__fp_nan>:
 5a2:	9f ef       	ldi	r25, 0xFF	; 255
 5a4:	80 ec       	ldi	r24, 0xC0	; 192
 5a6:	08 95       	ret

000005a8 <__fp_pscA>:
 5a8:	00 24       	eor	r0, r0
 5aa:	0a 94       	dec	r0
 5ac:	16 16       	cp	r1, r22
 5ae:	17 06       	cpc	r1, r23
 5b0:	18 06       	cpc	r1, r24
 5b2:	09 06       	cpc	r0, r25
 5b4:	08 95       	ret

000005b6 <__fp_pscB>:
 5b6:	00 24       	eor	r0, r0
 5b8:	0a 94       	dec	r0
 5ba:	12 16       	cp	r1, r18
 5bc:	13 06       	cpc	r1, r19
 5be:	14 06       	cpc	r1, r20
 5c0:	05 06       	cpc	r0, r21
 5c2:	08 95       	ret

000005c4 <__fp_round>:
 5c4:	09 2e       	mov	r0, r25
 5c6:	03 94       	inc	r0
 5c8:	00 0c       	add	r0, r0
 5ca:	11 f4       	brne	.+4      	; 0x5d0 <__fp_round+0xc>
 5cc:	88 23       	and	r24, r24
 5ce:	52 f0       	brmi	.+20     	; 0x5e4 <__fp_round+0x20>
 5d0:	bb 0f       	add	r27, r27
 5d2:	40 f4       	brcc	.+16     	; 0x5e4 <__fp_round+0x20>
 5d4:	bf 2b       	or	r27, r31
 5d6:	11 f4       	brne	.+4      	; 0x5dc <__fp_round+0x18>
 5d8:	60 ff       	sbrs	r22, 0
 5da:	04 c0       	rjmp	.+8      	; 0x5e4 <__fp_round+0x20>
 5dc:	6f 5f       	subi	r22, 0xFF	; 255
 5de:	7f 4f       	sbci	r23, 0xFF	; 255
 5e0:	8f 4f       	sbci	r24, 0xFF	; 255
 5e2:	9f 4f       	sbci	r25, 0xFF	; 255
 5e4:	08 95       	ret

000005e6 <__fp_split3>:
 5e6:	57 fd       	sbrc	r21, 7
 5e8:	90 58       	subi	r25, 0x80	; 128
 5ea:	44 0f       	add	r20, r20
 5ec:	55 1f       	adc	r21, r21
 5ee:	59 f0       	breq	.+22     	; 0x606 <__fp_splitA+0x10>
 5f0:	5f 3f       	cpi	r21, 0xFF	; 255
 5f2:	71 f0       	breq	.+28     	; 0x610 <__fp_splitA+0x1a>
 5f4:	47 95       	ror	r20

000005f6 <__fp_splitA>:
 5f6:	88 0f       	add	r24, r24
 5f8:	97 fb       	bst	r25, 7
 5fa:	99 1f       	adc	r25, r25
 5fc:	61 f0       	breq	.+24     	; 0x616 <__fp_splitA+0x20>
 5fe:	9f 3f       	cpi	r25, 0xFF	; 255
 600:	79 f0       	breq	.+30     	; 0x620 <__fp_splitA+0x2a>
 602:	87 95       	ror	r24
 604:	08 95       	ret
 606:	12 16       	cp	r1, r18
 608:	13 06       	cpc	r1, r19
 60a:	14 06       	cpc	r1, r20
 60c:	55 1f       	adc	r21, r21
 60e:	f2 cf       	rjmp	.-28     	; 0x5f4 <__fp_split3+0xe>
 610:	46 95       	lsr	r20
 612:	f1 df       	rcall	.-30     	; 0x5f6 <__fp_splitA>
 614:	08 c0       	rjmp	.+16     	; 0x626 <__fp_splitA+0x30>
 616:	16 16       	cp	r1, r22
 618:	17 06       	cpc	r1, r23
 61a:	18 06       	cpc	r1, r24
 61c:	99 1f       	adc	r25, r25
 61e:	f1 cf       	rjmp	.-30     	; 0x602 <__fp_splitA+0xc>
 620:	86 95       	lsr	r24
 622:	71 05       	cpc	r23, r1
 624:	61 05       	cpc	r22, r1
 626:	08 94       	sec
 628:	08 95       	ret

0000062a <__fp_zero>:
 62a:	e8 94       	clt

0000062c <__fp_szero>:
 62c:	bb 27       	eor	r27, r27
 62e:	66 27       	eor	r22, r22
 630:	77 27       	eor	r23, r23
 632:	cb 01       	movw	r24, r22
 634:	97 f9       	bld	r25, 7
 636:	08 95       	ret

00000638 <pow>:
 638:	fa 01       	movw	r30, r20
 63a:	ee 0f       	add	r30, r30
 63c:	ff 1f       	adc	r31, r31
 63e:	30 96       	adiw	r30, 0x00	; 0
 640:	21 05       	cpc	r18, r1
 642:	31 05       	cpc	r19, r1
 644:	a1 f1       	breq	.+104    	; 0x6ae <pow+0x76>
 646:	61 15       	cp	r22, r1
 648:	71 05       	cpc	r23, r1
 64a:	61 f4       	brne	.+24     	; 0x664 <pow+0x2c>
 64c:	80 38       	cpi	r24, 0x80	; 128
 64e:	bf e3       	ldi	r27, 0x3F	; 63
 650:	9b 07       	cpc	r25, r27
 652:	49 f1       	breq	.+82     	; 0x6a6 <pow+0x6e>
 654:	68 94       	set
 656:	90 38       	cpi	r25, 0x80	; 128
 658:	81 05       	cpc	r24, r1
 65a:	61 f0       	breq	.+24     	; 0x674 <pow+0x3c>
 65c:	80 38       	cpi	r24, 0x80	; 128
 65e:	bf ef       	ldi	r27, 0xFF	; 255
 660:	9b 07       	cpc	r25, r27
 662:	41 f0       	breq	.+16     	; 0x674 <pow+0x3c>
 664:	99 23       	and	r25, r25
 666:	4a f5       	brpl	.+82     	; 0x6ba <pow+0x82>
 668:	ff 3f       	cpi	r31, 0xFF	; 255
 66a:	e1 05       	cpc	r30, r1
 66c:	31 05       	cpc	r19, r1
 66e:	21 05       	cpc	r18, r1
 670:	19 f1       	breq	.+70     	; 0x6b8 <pow+0x80>
 672:	e8 94       	clt
 674:	08 94       	sec
 676:	e7 95       	ror	r30
 678:	d9 01       	movw	r26, r18
 67a:	aa 23       	and	r26, r26
 67c:	29 f4       	brne	.+10     	; 0x688 <pow+0x50>
 67e:	ab 2f       	mov	r26, r27
 680:	be 2f       	mov	r27, r30
 682:	f8 5f       	subi	r31, 0xF8	; 248
 684:	d0 f3       	brcs	.-12     	; 0x67a <pow+0x42>
 686:	10 c0       	rjmp	.+32     	; 0x6a8 <pow+0x70>
 688:	ff 5f       	subi	r31, 0xFF	; 255
 68a:	70 f4       	brcc	.+28     	; 0x6a8 <pow+0x70>
 68c:	a6 95       	lsr	r26
 68e:	e0 f7       	brcc	.-8      	; 0x688 <pow+0x50>
 690:	f7 39       	cpi	r31, 0x97	; 151
 692:	50 f0       	brcs	.+20     	; 0x6a8 <pow+0x70>
 694:	19 f0       	breq	.+6      	; 0x69c <pow+0x64>
 696:	ff 3a       	cpi	r31, 0xAF	; 175
 698:	38 f4       	brcc	.+14     	; 0x6a8 <pow+0x70>
 69a:	9f 77       	andi	r25, 0x7F	; 127
 69c:	9f 93       	push	r25
 69e:	0d d0       	rcall	.+26     	; 0x6ba <pow+0x82>
 6a0:	0f 90       	pop	r0
 6a2:	07 fc       	sbrc	r0, 7
 6a4:	90 58       	subi	r25, 0x80	; 128
 6a6:	08 95       	ret
 6a8:	46 f0       	brts	.+16     	; 0x6ba <pow+0x82>
 6aa:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__fp_nan>
 6ae:	60 e0       	ldi	r22, 0x00	; 0
 6b0:	70 e0       	ldi	r23, 0x00	; 0
 6b2:	80 e8       	ldi	r24, 0x80	; 128
 6b4:	9f e3       	ldi	r25, 0x3F	; 63
 6b6:	08 95       	ret
 6b8:	4f e7       	ldi	r20, 0x7F	; 127
 6ba:	9f 77       	andi	r25, 0x7F	; 127
 6bc:	5f 93       	push	r21
 6be:	4f 93       	push	r20
 6c0:	3f 93       	push	r19
 6c2:	2f 93       	push	r18
 6c4:	0e 94 17 04 	call	0x82e	; 0x82e <log>
 6c8:	2f 91       	pop	r18
 6ca:	3f 91       	pop	r19
 6cc:	4f 91       	pop	r20
 6ce:	5f 91       	pop	r21
 6d0:	0e 94 93 04 	call	0x926	; 0x926 <__mulsf3>
 6d4:	0c 94 74 03 	jmp	0x6e8	; 0x6e8 <exp>
 6d8:	29 f4       	brne	.+10     	; 0x6e4 <pow+0xac>
 6da:	16 f0       	brts	.+4      	; 0x6e0 <pow+0xa8>
 6dc:	0c 94 cb 02 	jmp	0x596	; 0x596 <__fp_inf>
 6e0:	0c 94 15 03 	jmp	0x62a	; 0x62a <__fp_zero>
 6e4:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__fp_nan>

000006e8 <exp>:
 6e8:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__fp_splitA>
 6ec:	a8 f3       	brcs	.-22     	; 0x6d8 <pow+0xa0>
 6ee:	96 38       	cpi	r25, 0x86	; 134
 6f0:	a0 f7       	brcc	.-24     	; 0x6da <pow+0xa2>
 6f2:	07 f8       	bld	r0, 7
 6f4:	0f 92       	push	r0
 6f6:	e8 94       	clt
 6f8:	2b e3       	ldi	r18, 0x3B	; 59
 6fa:	3a ea       	ldi	r19, 0xAA	; 170
 6fc:	48 eb       	ldi	r20, 0xB8	; 184
 6fe:	5f e7       	ldi	r21, 0x7F	; 127
 700:	0e 94 a9 04 	call	0x952	; 0x952 <__mulsf3_pse>
 704:	0f 92       	push	r0
 706:	0f 92       	push	r0
 708:	0f 92       	push	r0
 70a:	4d b7       	in	r20, 0x3d	; 61
 70c:	5e b7       	in	r21, 0x3e	; 62
 70e:	0f 92       	push	r0
 710:	0e 94 5f 04 	call	0x8be	; 0x8be <modf>
 714:	e4 e5       	ldi	r30, 0x54	; 84
 716:	f0 e0       	ldi	r31, 0x00	; 0
 718:	0e 94 a6 03 	call	0x74c	; 0x74c <__fp_powser>
 71c:	4f 91       	pop	r20
 71e:	5f 91       	pop	r21
 720:	ef 91       	pop	r30
 722:	ff 91       	pop	r31
 724:	e5 95       	asr	r30
 726:	ee 1f       	adc	r30, r30
 728:	ff 1f       	adc	r31, r31
 72a:	49 f0       	breq	.+18     	; 0x73e <exp+0x56>
 72c:	fe 57       	subi	r31, 0x7E	; 126
 72e:	e0 68       	ori	r30, 0x80	; 128
 730:	44 27       	eor	r20, r20
 732:	ee 0f       	add	r30, r30
 734:	44 1f       	adc	r20, r20
 736:	fa 95       	dec	r31
 738:	e1 f7       	brne	.-8      	; 0x732 <exp+0x4a>
 73a:	41 95       	neg	r20
 73c:	55 0b       	sbc	r21, r21
 73e:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <ldexp>
 742:	0f 90       	pop	r0
 744:	07 fe       	sbrs	r0, 7
 746:	0c 94 cd 03 	jmp	0x79a	; 0x79a <inverse>
 74a:	08 95       	ret

0000074c <__fp_powser>:
 74c:	df 93       	push	r29
 74e:	cf 93       	push	r28
 750:	1f 93       	push	r17
 752:	0f 93       	push	r16
 754:	ff 92       	push	r15
 756:	ef 92       	push	r14
 758:	df 92       	push	r13
 75a:	7b 01       	movw	r14, r22
 75c:	8c 01       	movw	r16, r24
 75e:	68 94       	set
 760:	06 c0       	rjmp	.+12     	; 0x76e <__fp_powser+0x22>
 762:	da 2e       	mov	r13, r26
 764:	ef 01       	movw	r28, r30
 766:	0e 94 a6 04 	call	0x94c	; 0x94c <__mulsf3x>
 76a:	fe 01       	movw	r30, r28
 76c:	e8 94       	clt
 76e:	a5 91       	lpm	r26, Z+
 770:	25 91       	lpm	r18, Z+
 772:	35 91       	lpm	r19, Z+
 774:	45 91       	lpm	r20, Z+
 776:	55 91       	lpm	r21, Z+
 778:	a6 f3       	brts	.-24     	; 0x762 <__fp_powser+0x16>
 77a:	ef 01       	movw	r28, r30
 77c:	0e 94 98 01 	call	0x330	; 0x330 <__addsf3x>
 780:	fe 01       	movw	r30, r28
 782:	97 01       	movw	r18, r14
 784:	a8 01       	movw	r20, r16
 786:	da 94       	dec	r13
 788:	69 f7       	brne	.-38     	; 0x764 <__fp_powser+0x18>
 78a:	df 90       	pop	r13
 78c:	ef 90       	pop	r14
 78e:	ff 90       	pop	r15
 790:	0f 91       	pop	r16
 792:	1f 91       	pop	r17
 794:	cf 91       	pop	r28
 796:	df 91       	pop	r29
 798:	08 95       	ret

0000079a <inverse>:
 79a:	9b 01       	movw	r18, r22
 79c:	ac 01       	movw	r20, r24
 79e:	60 e0       	ldi	r22, 0x00	; 0
 7a0:	70 e0       	ldi	r23, 0x00	; 0
 7a2:	80 e8       	ldi	r24, 0x80	; 128
 7a4:	9f e3       	ldi	r25, 0x3F	; 63
 7a6:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__divsf3>
 7aa:	0c 94 cb 02 	jmp	0x596	; 0x596 <__fp_inf>
 7ae:	0c 94 00 05 	jmp	0xa00	; 0xa00 <__fp_mpack>

000007b2 <ldexp>:
 7b2:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__fp_splitA>
 7b6:	d8 f3       	brcs	.-10     	; 0x7ae <inverse+0x14>
 7b8:	99 23       	and	r25, r25
 7ba:	c9 f3       	breq	.-14     	; 0x7ae <inverse+0x14>
 7bc:	94 0f       	add	r25, r20
 7be:	51 1d       	adc	r21, r1
 7c0:	a3 f3       	brvs	.-24     	; 0x7aa <inverse+0x10>
 7c2:	91 50       	subi	r25, 0x01	; 1
 7c4:	50 40       	sbci	r21, 0x00	; 0
 7c6:	94 f0       	brlt	.+36     	; 0x7ec <ldexp+0x3a>
 7c8:	59 f0       	breq	.+22     	; 0x7e0 <ldexp+0x2e>
 7ca:	88 23       	and	r24, r24
 7cc:	32 f0       	brmi	.+12     	; 0x7da <ldexp+0x28>
 7ce:	66 0f       	add	r22, r22
 7d0:	77 1f       	adc	r23, r23
 7d2:	88 1f       	adc	r24, r24
 7d4:	91 50       	subi	r25, 0x01	; 1
 7d6:	50 40       	sbci	r21, 0x00	; 0
 7d8:	c1 f7       	brne	.-16     	; 0x7ca <ldexp+0x18>
 7da:	9e 3f       	cpi	r25, 0xFE	; 254
 7dc:	51 05       	cpc	r21, r1
 7de:	2c f7       	brge	.-54     	; 0x7aa <inverse+0x10>
 7e0:	88 0f       	add	r24, r24
 7e2:	91 1d       	adc	r25, r1
 7e4:	96 95       	lsr	r25
 7e6:	87 95       	ror	r24
 7e8:	97 f9       	bld	r25, 7
 7ea:	08 95       	ret
 7ec:	5f 3f       	cpi	r21, 0xFF	; 255
 7ee:	ac f0       	brlt	.+42     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 7f0:	98 3e       	cpi	r25, 0xE8	; 232
 7f2:	9c f0       	brlt	.+38     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 7f4:	bb 27       	eor	r27, r27
 7f6:	86 95       	lsr	r24
 7f8:	77 95       	ror	r23
 7fa:	67 95       	ror	r22
 7fc:	b7 95       	ror	r27
 7fe:	08 f4       	brcc	.+2      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 800:	b1 60       	ori	r27, 0x01	; 1
 802:	93 95       	inc	r25
 804:	c1 f7       	brne	.-16     	; 0x7f6 <ldexp+0x44>
 806:	bb 0f       	add	r27, r27
 808:	58 f7       	brcc	.-42     	; 0x7e0 <ldexp+0x2e>
 80a:	11 f4       	brne	.+4      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 80c:	60 ff       	sbrs	r22, 0
 80e:	e8 cf       	rjmp	.-48     	; 0x7e0 <ldexp+0x2e>
 810:	6f 5f       	subi	r22, 0xFF	; 255
 812:	7f 4f       	sbci	r23, 0xFF	; 255
 814:	8f 4f       	sbci	r24, 0xFF	; 255
 816:	9f 4f       	sbci	r25, 0xFF	; 255
 818:	e3 cf       	rjmp	.-58     	; 0x7e0 <ldexp+0x2e>
 81a:	0c 94 16 03 	jmp	0x62c	; 0x62c <__fp_szero>
 81e:	16 f0       	brts	.+4      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 820:	0c 94 00 05 	jmp	0xa00	; 0xa00 <__fp_mpack>
 824:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__fp_nan>
 828:	68 94       	set
 82a:	0c 94 cb 02 	jmp	0x596	; 0x596 <__fp_inf>

0000082e <log>:
 82e:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__fp_splitA>
 832:	a8 f3       	brcs	.-22     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 834:	99 23       	and	r25, r25
 836:	c1 f3       	breq	.-16     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 838:	ae f3       	brts	.-22     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 83a:	df 93       	push	r29
 83c:	cf 93       	push	r28
 83e:	1f 93       	push	r17
 840:	0f 93       	push	r16
 842:	ff 92       	push	r15
 844:	c9 2f       	mov	r28, r25
 846:	dd 27       	eor	r29, r29
 848:	88 23       	and	r24, r24
 84a:	2a f0       	brmi	.+10     	; 0x856 <log+0x28>
 84c:	21 97       	sbiw	r28, 0x01	; 1
 84e:	66 0f       	add	r22, r22
 850:	77 1f       	adc	r23, r23
 852:	88 1f       	adc	r24, r24
 854:	da f7       	brpl	.-10     	; 0x84c <log+0x1e>
 856:	20 e0       	ldi	r18, 0x00	; 0
 858:	30 e0       	ldi	r19, 0x00	; 0
 85a:	40 e8       	ldi	r20, 0x80	; 128
 85c:	5f eb       	ldi	r21, 0xBF	; 191
 85e:	9f e3       	ldi	r25, 0x3F	; 63
 860:	88 39       	cpi	r24, 0x98	; 152
 862:	20 f0       	brcs	.+8      	; 0x86c <__stack+0xd>
 864:	80 3e       	cpi	r24, 0xE0	; 224
 866:	38 f0       	brcs	.+14     	; 0x876 <__stack+0x17>
 868:	21 96       	adiw	r28, 0x01	; 1
 86a:	8f 77       	andi	r24, 0x7F	; 127
 86c:	0e 94 81 01 	call	0x302	; 0x302 <__addsf3>
 870:	ec e7       	ldi	r30, 0x7C	; 124
 872:	f0 e0       	ldi	r31, 0x00	; 0
 874:	04 c0       	rjmp	.+8      	; 0x87e <__stack+0x1f>
 876:	0e 94 81 01 	call	0x302	; 0x302 <__addsf3>
 87a:	e9 ea       	ldi	r30, 0xA9	; 169
 87c:	f0 e0       	ldi	r31, 0x00	; 0
 87e:	0e 94 a6 03 	call	0x74c	; 0x74c <__fp_powser>
 882:	8b 01       	movw	r16, r22
 884:	be 01       	movw	r22, r28
 886:	ec 01       	movw	r28, r24
 888:	fb 2e       	mov	r15, r27
 88a:	6f 57       	subi	r22, 0x7F	; 127
 88c:	71 09       	sbc	r23, r1
 88e:	75 95       	asr	r23
 890:	77 1f       	adc	r23, r23
 892:	88 0b       	sbc	r24, r24
 894:	99 0b       	sbc	r25, r25
 896:	0e 94 90 02 	call	0x520	; 0x520 <__floatsisf>
 89a:	28 e1       	ldi	r18, 0x18	; 24
 89c:	32 e7       	ldi	r19, 0x72	; 114
 89e:	41 e3       	ldi	r20, 0x31	; 49
 8a0:	5f e3       	ldi	r21, 0x3F	; 63
 8a2:	0e 94 a6 04 	call	0x94c	; 0x94c <__mulsf3x>
 8a6:	af 2d       	mov	r26, r15
 8a8:	98 01       	movw	r18, r16
 8aa:	ae 01       	movw	r20, r28
 8ac:	ff 90       	pop	r15
 8ae:	0f 91       	pop	r16
 8b0:	1f 91       	pop	r17
 8b2:	cf 91       	pop	r28
 8b4:	df 91       	pop	r29
 8b6:	0e 94 98 01 	call	0x330	; 0x330 <__addsf3x>
 8ba:	0c 94 e2 02 	jmp	0x5c4	; 0x5c4 <__fp_round>

000008be <modf>:
 8be:	fa 01       	movw	r30, r20
 8c0:	dc 01       	movw	r26, r24
 8c2:	aa 0f       	add	r26, r26
 8c4:	bb 1f       	adc	r27, r27
 8c6:	9b 01       	movw	r18, r22
 8c8:	ac 01       	movw	r20, r24
 8ca:	bf 57       	subi	r27, 0x7F	; 127
 8cc:	28 f4       	brcc	.+10     	; 0x8d8 <modf+0x1a>
 8ce:	22 27       	eor	r18, r18
 8d0:	33 27       	eor	r19, r19
 8d2:	44 27       	eor	r20, r20
 8d4:	50 78       	andi	r21, 0x80	; 128
 8d6:	20 c0       	rjmp	.+64     	; 0x918 <modf+0x5a>
 8d8:	b7 51       	subi	r27, 0x17	; 23
 8da:	90 f4       	brcc	.+36     	; 0x900 <modf+0x42>
 8dc:	ab 2f       	mov	r26, r27
 8de:	00 24       	eor	r0, r0
 8e0:	46 95       	lsr	r20
 8e2:	37 95       	ror	r19
 8e4:	27 95       	ror	r18
 8e6:	01 1c       	adc	r0, r1
 8e8:	a3 95       	inc	r26
 8ea:	d2 f3       	brmi	.-12     	; 0x8e0 <modf+0x22>
 8ec:	00 20       	and	r0, r0
 8ee:	71 f0       	breq	.+28     	; 0x90c <modf+0x4e>
 8f0:	22 0f       	add	r18, r18
 8f2:	33 1f       	adc	r19, r19
 8f4:	44 1f       	adc	r20, r20
 8f6:	b3 95       	inc	r27
 8f8:	da f3       	brmi	.-10     	; 0x8f0 <modf+0x32>
 8fa:	0e d0       	rcall	.+28     	; 0x918 <modf+0x5a>
 8fc:	0c 94 80 01 	jmp	0x300	; 0x300 <__subsf3>
 900:	61 30       	cpi	r22, 0x01	; 1
 902:	71 05       	cpc	r23, r1
 904:	a0 e8       	ldi	r26, 0x80	; 128
 906:	8a 07       	cpc	r24, r26
 908:	b9 46       	sbci	r27, 0x69	; 105
 90a:	30 f4       	brcc	.+12     	; 0x918 <modf+0x5a>
 90c:	9b 01       	movw	r18, r22
 90e:	ac 01       	movw	r20, r24
 910:	66 27       	eor	r22, r22
 912:	77 27       	eor	r23, r23
 914:	88 27       	eor	r24, r24
 916:	90 78       	andi	r25, 0x80	; 128
 918:	30 96       	adiw	r30, 0x00	; 0
 91a:	21 f0       	breq	.+8      	; 0x924 <modf+0x66>
 91c:	20 83       	st	Z, r18
 91e:	31 83       	std	Z+1, r19	; 0x01
 920:	42 83       	std	Z+2, r20	; 0x02
 922:	53 83       	std	Z+3, r21	; 0x03
 924:	08 95       	ret

00000926 <__mulsf3>:
 926:	0e 94 a6 04 	call	0x94c	; 0x94c <__mulsf3x>
 92a:	0c 94 e2 02 	jmp	0x5c4	; 0x5c4 <__fp_round>
 92e:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fp_pscA>
 932:	38 f0       	brcs	.+14     	; 0x942 <__mulsf3+0x1c>
 934:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__fp_pscB>
 938:	20 f0       	brcs	.+8      	; 0x942 <__mulsf3+0x1c>
 93a:	95 23       	and	r25, r21
 93c:	11 f0       	breq	.+4      	; 0x942 <__mulsf3+0x1c>
 93e:	0c 94 cb 02 	jmp	0x596	; 0x596 <__fp_inf>
 942:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <__fp_nan>
 946:	11 24       	eor	r1, r1
 948:	0c 94 16 03 	jmp	0x62c	; 0x62c <__fp_szero>

0000094c <__mulsf3x>:
 94c:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <__fp_split3>
 950:	70 f3       	brcs	.-36     	; 0x92e <__mulsf3+0x8>

00000952 <__mulsf3_pse>:
 952:	95 9f       	mul	r25, r21
 954:	c1 f3       	breq	.-16     	; 0x946 <__mulsf3+0x20>
 956:	95 0f       	add	r25, r21
 958:	50 e0       	ldi	r21, 0x00	; 0
 95a:	55 1f       	adc	r21, r21
 95c:	62 9f       	mul	r22, r18
 95e:	f0 01       	movw	r30, r0
 960:	72 9f       	mul	r23, r18
 962:	bb 27       	eor	r27, r27
 964:	f0 0d       	add	r31, r0
 966:	b1 1d       	adc	r27, r1
 968:	63 9f       	mul	r22, r19
 96a:	aa 27       	eor	r26, r26
 96c:	f0 0d       	add	r31, r0
 96e:	b1 1d       	adc	r27, r1
 970:	aa 1f       	adc	r26, r26
 972:	64 9f       	mul	r22, r20
 974:	66 27       	eor	r22, r22
 976:	b0 0d       	add	r27, r0
 978:	a1 1d       	adc	r26, r1
 97a:	66 1f       	adc	r22, r22
 97c:	82 9f       	mul	r24, r18
 97e:	22 27       	eor	r18, r18
 980:	b0 0d       	add	r27, r0
 982:	a1 1d       	adc	r26, r1
 984:	62 1f       	adc	r22, r18
 986:	73 9f       	mul	r23, r19
 988:	b0 0d       	add	r27, r0
 98a:	a1 1d       	adc	r26, r1
 98c:	62 1f       	adc	r22, r18
 98e:	83 9f       	mul	r24, r19
 990:	a0 0d       	add	r26, r0
 992:	61 1d       	adc	r22, r1
 994:	22 1f       	adc	r18, r18
 996:	74 9f       	mul	r23, r20
 998:	33 27       	eor	r19, r19
 99a:	a0 0d       	add	r26, r0
 99c:	61 1d       	adc	r22, r1
 99e:	23 1f       	adc	r18, r19
 9a0:	84 9f       	mul	r24, r20
 9a2:	60 0d       	add	r22, r0
 9a4:	21 1d       	adc	r18, r1
 9a6:	82 2f       	mov	r24, r18
 9a8:	76 2f       	mov	r23, r22
 9aa:	6a 2f       	mov	r22, r26
 9ac:	11 24       	eor	r1, r1
 9ae:	9f 57       	subi	r25, 0x7F	; 127
 9b0:	50 40       	sbci	r21, 0x00	; 0
 9b2:	9a f0       	brmi	.+38     	; 0x9da <__mulsf3_pse+0x88>
 9b4:	f1 f0       	breq	.+60     	; 0x9f2 <__mulsf3_pse+0xa0>
 9b6:	88 23       	and	r24, r24
 9b8:	4a f0       	brmi	.+18     	; 0x9cc <__mulsf3_pse+0x7a>
 9ba:	ee 0f       	add	r30, r30
 9bc:	ff 1f       	adc	r31, r31
 9be:	bb 1f       	adc	r27, r27
 9c0:	66 1f       	adc	r22, r22
 9c2:	77 1f       	adc	r23, r23
 9c4:	88 1f       	adc	r24, r24
 9c6:	91 50       	subi	r25, 0x01	; 1
 9c8:	50 40       	sbci	r21, 0x00	; 0
 9ca:	a9 f7       	brne	.-22     	; 0x9b6 <__mulsf3_pse+0x64>
 9cc:	9e 3f       	cpi	r25, 0xFE	; 254
 9ce:	51 05       	cpc	r21, r1
 9d0:	80 f0       	brcs	.+32     	; 0x9f2 <__mulsf3_pse+0xa0>
 9d2:	0c 94 cb 02 	jmp	0x596	; 0x596 <__fp_inf>
 9d6:	0c 94 16 03 	jmp	0x62c	; 0x62c <__fp_szero>
 9da:	5f 3f       	cpi	r21, 0xFF	; 255
 9dc:	e4 f3       	brlt	.-8      	; 0x9d6 <__mulsf3_pse+0x84>
 9de:	98 3e       	cpi	r25, 0xE8	; 232
 9e0:	d4 f3       	brlt	.-12     	; 0x9d6 <__mulsf3_pse+0x84>
 9e2:	86 95       	lsr	r24
 9e4:	77 95       	ror	r23
 9e6:	67 95       	ror	r22
 9e8:	b7 95       	ror	r27
 9ea:	f7 95       	ror	r31
 9ec:	e7 95       	ror	r30
 9ee:	9f 5f       	subi	r25, 0xFF	; 255
 9f0:	c1 f7       	brne	.-16     	; 0x9e2 <__mulsf3_pse+0x90>
 9f2:	fe 2b       	or	r31, r30
 9f4:	88 0f       	add	r24, r24
 9f6:	91 1d       	adc	r25, r1
 9f8:	96 95       	lsr	r25
 9fa:	87 95       	ror	r24
 9fc:	97 f9       	bld	r25, 7
 9fe:	08 95       	ret

00000a00 <__fp_mpack>:
 a00:	9f 3f       	cpi	r25, 0xFF	; 255
 a02:	31 f0       	breq	.+12     	; 0xa10 <__fp_mpack_finite+0xc>

00000a04 <__fp_mpack_finite>:
 a04:	91 50       	subi	r25, 0x01	; 1
 a06:	20 f4       	brcc	.+8      	; 0xa10 <__fp_mpack_finite+0xc>
 a08:	87 95       	ror	r24
 a0a:	77 95       	ror	r23
 a0c:	67 95       	ror	r22
 a0e:	b7 95       	ror	r27
 a10:	88 0f       	add	r24, r24
 a12:	91 1d       	adc	r25, r1
 a14:	96 95       	lsr	r25
 a16:	87 95       	ror	r24
 a18:	97 f9       	bld	r25, 7
 a1a:	08 95       	ret

00000a1c <_exit>:
 a1c:	f8 94       	cli

00000a1e <__stop_program>:
 a1e:	ff cf       	rjmp	.-2      	; 0xa1e <__stop_program>
